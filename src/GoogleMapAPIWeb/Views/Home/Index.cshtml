@{
    Layout = "_Layout";
    ViewData["Title"] = "Spectrum Hackathon";
}
@model HomeViewModel
@using MapApiCore.Models

<div class="container-fluid">

    <div class="row">
        <nav class="col-md-2 d-none d-md-block bg-light sidebar">
            <div class="sidebar-sticky">
                <ul class="nav flex-column">
                    <li class="nav-item">
                        <a class="nav-link active" href="#">
                            <img src="https://gq-images.condecdn.net/image/8xyYpWg21oe/crop/3240/f/19SadiqKhan_2.jpg" alt="Sadiq Khan">
                            <span class="sr-only">(current)</span>
                        </a>
                        <a class="nav-link active" href="#">
                            Sadiq Khan
                            <span class="sr-only">(current)</span>
                        </a>
                        <a class="nav-link active" href="#">
                            53 available points
                            <span class="sr-only">(current)</span>
                        </a>
                    </li>
                    <li class="divider"></li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">
                            Pay
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">
                            Rewards
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">
                            Badges
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">
                            Places
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">
                            History
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">
                            Notifications
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">
                            Help
                        </a>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">Feedback</a>
                        <div class="dropdown-menu">
                            <a class="dropdown-item" href="#">Contact us</a>
                            <div class="dropdown-divider"></div>
                            <a class="dropdown-item" href="#">Help improve the app</a>
                            <a class="dropdown-item" href="#">Rate app</a>
                            <a class="dropdown-item" href="#">Share app</a>
                        </div>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">Other</a>
                        <div class="dropdown-menu">
                            <a class="dropdown-item" href="#">Privacy Policy</a>
                            <a class="dropdown-item" href="#">Terms of Service</a>
                            <a class="dropdown-item" href="#">Data Sources</a>
                            <a class="dropdown-item" href="#">Acknowledgements</a>
                        </div>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">
                            Settings
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">
                            Logout
                        </a>
                    </li>
                </ul>
            </div>
        </nav>

        <main role="main" class="col-md-9 ml-sm-auto col-lg-10 px-4">

            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-1 pb-1 mb-3 border-bottom">
                <h3>Route Map</h3>
                <div class="btn-toolbar mb-2 mb-md-0">
                    <div class="btn-group mr-2">
                        <button type="button" id="btnPollution" class="btn btn-sm btn-outline-primary" data-toggle="button" aria-pressed="false" autocomplete="off">Air Quality Index</button>
                        <button type="button" id="btnSchools" class="btn btn-sm btn-outline-primary" data-toggle="button" aria-pressed="false" autocomplete="off">Schools</button>
                    </div>
                </div>
            </div>

            <div id="mapContainer" class="my-4 w-100 mb-2"></div>
            <h3>#</h3>
            <div class="container">
                <div class="card-deck mb-3 text">
                    @foreach (var hvm in Model.RouteInfos)
                    {
                        <div class="card mb-4 shadow-sm">
                            <div class="card-header">
                                <h4 my-0-font-weight-normat> @hvm.RouteLabel (@hvm.ModeOfTransport) </h4>
                            </div>
                            <div class="card-body" style="background-color: @hvm.ColorInHex">
                                <ul class="list-unstyled mt-3 mb-4">
                                    <li><h6>Green score: @hvm.PollutionPoint</h6></li>
                                    <li><h6>Pollution zone: @hvm.PollutionZone</h6></li>
                                    <li><h6>Distance: @hvm.Distance miles</h6></li>
                                    <li><h6>Travel time: @hvm.Duration</h6></li>
                                    <li><h6>Travel cost: @hvm.TravelCost</h6></li>
                                    <li><h6>Schools: @(hvm.SchoolCount == 0 ? "N/A" : hvm.SchoolCount.ToString())</h6></li>
                                </ul>
                            </div>
                        </div>
                    }
                </div>
            </div>
            <h3># Traveling via less polluting car may significantly reduce your cost by up to 30%.</h3>

        </main>
    </div>
</div>

@section Scripts {

    <script>
        var map;
        var showPollution = false;
        var showSchools = false;
        var startTime = '12:00';

        var btnPollution = document.getElementById('btnPollution');
        var btnSchools = document.getElementById('btnSchools');
        var startTimeList = document.getElementById('startTimeList');

        btnPollution.onclick = function() {
            showPollution = !showPollution;
            initMap();
        };

        btnSchools.onclick = function() {
            showSchools = !showSchools;
            initMap();
        };

        startTimeList.onchange = function() {
            startTime = startTimeList.options[startTimeList.selectedIndex].value;

            initMap();
        };

        async function initMap() {
            var src = 'https://spectrummapapi.azurewebsites.net/api/map/1?showPollution=' +
                showPollution +
                '&showSchools=' +
                showSchools +
                '&startTime=' +
                startTime +
                '&startName=NorthGreenwich&startLongitude=0.00447&startLatitude=51.49847&endName=Westminster,endLongitude=-0.13563,endLatitude=51.4975';

            const response = await fetch('http://localhost:52637/api/map/pollution');
            const heatMapData = await response.json();
    
            heatMapResult = $.map(heatMapData, function(v) {
                return {
                    weight: v.weight,
                    location: new google.maps.LatLng(v.location.latitude, v.location.longitude)
                    }
            });

        console.log(heatMapResult);

        map = new google.maps.Map(document.getElementById('mapContainer'),
            {
                center: new google.maps.LatLng(51.49869, -0.12616),
                zoom: 12.2,
                mapTypeId: 'terrain'
            });

        var heatMap = new google.maps.visualization.HeatmapLayer(
            {
                data: heatMapResult,
                dissipating: true,
                radius: 50,
                map: map
            });

        var kmlLayer = new google.maps.KmlLayer(src,
            {
                suppressInfoWindows: false,
                preserveViewport: true,
                map: map
            });
        }
    </script>
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD9wNb5Blyil-FPnHyuxNQi3-Zz1qBy2Pc&libraries=visualization&callback=initMap">
    </script>

}